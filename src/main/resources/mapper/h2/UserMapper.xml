<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <!--UserMapperRepositoryとxmlのマッピング-->
<mapper namespace="com.example.repository.UserMapperRepository">

<!--マッピング定義（ユーザー）-->
<resultMap type="com.example.domainUser.model.UserMapperEntity" id="user">
	<!--<id column="user_id" property="userId" />-->
	<result column="login_id" property="loginId" />
	<result column="password" property="password" />
	<result column="user_name" property="userName" />
	<result column="user_name_kana" property="userNamekana" />
	<result column="mail_address" property="mailAddress" />
	<result column="department_id" property="departmentId" />
	<result column="role_id" property="roleId" />
	<result column="validation" property="validation" />
	<result column="hire_date" property="hire" />
	<result column="authority_flg" property="authority" />
    <association property="department" resultMap="department" />
    <association property="role" resultMap="role" />
</resultMap>

<!--マッピング定義（部署）-->
<resultMap type="com.example.domainUser.model.DepartmentEntity" id="department">
   <id column="department_id" property="departmentId" />
   <result column="department_name" property="departmentName" />
</resultMap>

<!--マッピング定義（役職）-->
<resultMap type="com.example.domainUser.model.RoleEntity" id="role">
   <id column="role_id" property="roleId" />
   <result column="role_name" property="roleName" />
</resultMap>

<!--マッピング定義（有給）-->
<!--<resultMap type="com.example.domainUSer.model.PaidEntity" id="paid">
	<id column="paid_id" property="paidId" />
	<id column="user_id" property="userId" />
	<result column="paid_days" property="paidDays" />
    <association property="user" resultMap="user" />
</resultMap>-->


<!--ユーザー1件登録-->
<insert id="insertOne">
	 insert into m_user(
	  login_id
	 ,password
	 ,user_name
	 ,user_name_kana
	 ,mail_address
     ,department_id
	 ,role_id
	 ,validation
	 ,hire_date
	 ,authority_flg
	 )
	 value(
	 #{loginId}
	,#{password}
	,#{userName}
	,#{userNamekana}
	,#{mailAddress}
	,#{departmentId}
	,#{roleId}
	,#{validation}
	,#{hire}
	,#{authority}
	)
</insert>


	
<!--ユーザー複数件取得-->
<select id="findMany" resultType="UserMapperEntity">
	select * from m_user
</select>

<!--部署複数件取得-->
<select id="findAll" resultType="DepartmentEntity">
	select * from m_department
</select>

<!--役職複数件取得-->
<select id="findAll2" resultType="RoleEntity">
	select * from m_role
</select>


<!--ユーザー１件検索-->
<select id="findOne" resultMap="user">
	select * from m_user 
	left join m_department on m_user.department_id = m_department.department_id 
	left join m_role on m_user.role_id = m_role.role_id 
	where login_id = #{loginId}
</select>

<!--ユーザー１件更新-->
<update id="updateOne">
	update m_user set 
	login_id =#{loginId},
	<!--password = #{password},-->
	
	
	
	user_name =#{userName},
	user_name_kana =#{userNamekana},
	mail_address =#{mailAddress},
	department_id =#{departmentId},
	role_id =#{roleId},
	validation =#{validation},
	authority_flg =#{authority},
	hire_date =#{hire} 
	password = CASE 
	           WHEN password IS NULL THEN password 
	           ELSE #{password} 
    END	           
	where 
	login_id = #{loginId}
</update>

<!--ユーザー１件削除-->
<delete id="deleteOne">
	delete from m_user 
	where 
	login_id =#{loginId}
</delete>
 </mapper>